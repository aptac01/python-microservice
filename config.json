{
    "_comment":"эта часть в большинстве ситуаций не меняется, но SECRET_KEY на каждом деплое должен быть уникальным",
    "DEBUG"              :false,
    "TESTING"            :false,
    "CSRF_ENABLED"       :true,
    "_comment"           :"https://stackoverflow.com/questions/14853694/python-jsonify-dictionary-in-utf-8",
    "JSON_AS_ASCII"      :false,
    "_comment"           :"python3.x binascii.hexlify(os.urandom(24))",
    "SECRET_KEY"         :"d17c571102250cec991fb6393e417d767cdee3ca537cf43a",

    "_comment":"всё, что дальше - уникально для каждого приложения",

    "_comment":"пути, которые нужно настроить при очередном развертывании",
    "api_directory"      :"/home/aptac01/python_microservice",
    "env_directory"      :"/home/aptac01/python_microservice/env",

    "_comment":"команда, lsof на конкретной машине, нужна для остановки сервиса без pid-файла",
    "lsof_command"       :"lsof",

    "DB_NAME"            :"DB_NAME",

    "_comment":"настройки на разные контура",
    "CONSUL_ADDRESS"     :"10.10.10.210",
    "CONSUL_PORT"        :8500,
    "SERVER_ADDRESS"     :"localhost",
    "SERVER_PORT"        :1234,
    "SERVICE_NAME"       :"example",
    "SERVICE_ID"         :"example-1",

    "_comment":"настройки для relog",
    "_comment":"регулярное, выражение которое кодирует названия логов, обрабатываемые командой relog",
    "RELOG_FILES"        :"example_uwsgi\\.log(\\.\\d+)*",
    "_comment":"удалять, логи старше, чем столько дней",
    "DELETE_LOGS_DAYS"   :3,
    "_comment":"удалять, или нет вторичные логи, если не был передан параметр в cli, флаг --relog",
    "DELETE_RELOG_FILES" :1,

    "_comment":"стучаться, в консул или нет, если не был передан параметр в cli, флаг --consul",
    "CONSUL_REG"         :0,

    "_comment":"красить, ли логи при выводе на экран",
    "COLOR_LOGS_SCREEN"  :1,
    "_comment":"красить, ли логи при выводе в файлы",
    "COLOR_LOGS_FILES"   :1,

    "_comment":"настроки, для конфига uwsgi",
    "_comment":"если, нужно добавить параметры в конфиг uwsgi",
    "_comment":"см. функцию (какую-то) в service.py",
    "uwsgi_config_file"          :"/home/aptac01/python_microservice/tmp/uwsgi.ini",
    "uwsgi_conf_chdir"           :"/home/aptac01/python_microservice",
    "uwsgi_conf_virtualenv"      :"/home/aptac01/python_microservice/env",
    "uwsgi_conf_pythonpath"      :"/home/aptac01/python_microservice/env/bin,",
    "uwsgi_conf_module"          :"app",
    "uwsgi_conf_callable"        :"app",
    "uwsgi_conf_processes"       :2,
    "uwsgi_conf_http"            :"0.0.0.0:1234",
    "uwsgi_conf_master"          :true,
    "uwsgi_conf_pidfile"         :"/home/aptac01/python_microservice/tmp/example_api-master.pid",
    "uwsgi_conf_max_requests"    :5000,
    "uwsgi_conf_disable_logging" :true,
    "uwsgi_conf_logto"           :"/home/aptac01/python_microservice/log/example_%n.log",
    "uwsgi_conf_log_maxsize"     :"100000",
    "uwsgi_conf_log_date"        :"[%%Y:%%m:%%d %%H:%%M:%%S]"
}